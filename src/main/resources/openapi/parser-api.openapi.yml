openapi: 3.0.0
info:
  title: Data Harvest Parser
  version: 0.0.1
servers:
  - url: http://localhost:8082/api
    description: Development Server

paths:
  /parser/settings:
    post:
      security:
        - bearerAuth: [ ]
      summary: Set Settings for Parsing
      tags:
        - Parser
      operationId: setParserSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserParserSettingsOpenApi"
      responses:
        '201':
          description: Settings were Successfully Set
        '401':
          $ref: "#/components/responses/UnauthorizedError"

  /parser/history:
    get:
      security:
        - bearerAuth: [ ]
      summary: Return List of User Parser Queries History
      tags:
        - Parser
      operationId: getAllParserQueries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParserResultOpenApi'
        '401':
          $ref: "#/components/responses/UnauthorizedError"

  /parser/{id}:
    get:
      security:
        - bearerAuth: [ ]
      summary: Return Parser Settings and It's Result File
      tags:
        - Parser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: Parser Settings ID
      operationId: showParserResultsById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParserResultOpenApi"
        '401':
          $ref: "#/components/responses/UnauthorizedError"
    post:
      security:
        - bearerAuth: [ ]
      summary: Start Parsing with Preset Settings with {id}
      tags:
        - Parser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: Parser Settings ID
      operationId: runParser
      responses:
        '200':
          description: OK
        '400':
          description: This Parser Settings wasn't found
        '401':
          $ref: "#/components/responses/UnauthorizedError"

  /parser/{id}/download:
    get:
      security:
        - bearerAuth: [ ]
      summary: Download Results File With the Specific ID
      tags:
        - Parser
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: Parser Results File ID
      operationId: downloadFile
      responses:
        200:
          description: The file download was successful
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          description: Internal Server Error

  /folder:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Folder
      summary: Retrieving All Folder Items of User with Concrete Id
      parameters:
        - name: userId
          in: query
          description: User id
          required: true
          schema:
            type: integer
            format: int64
      operationId: getAllFolderItemsByUserId
      responses:
        200:
          description: The folder items were retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FolderItemOpenApi"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        500:
          description: Internal Server Error

components:

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

  schemas:

    UserParserSettingsOpenApi:
      allOf:
        - $ref: '#/components/schemas/FolderItemOpenApi'
        - type: object
          required:
            - firstPageUrl
            - numOfPagesToParse
            - className
            - tagName
            - cssSelectorNextPage
            - header
            - elementLocators
            - parsingHistory
          properties:
            firstPageUrl:
              type: string
            numOfPagesToParse:
              type: integer
              format: int32
            className:
              type: string
            tagName:
              type: string
            cssSelectorNextPage:
              type: string
            header:
              type: array
              items:
                type: string
            elementLocators:
              type: array
              items:
                $ref: '#/components/schemas/ElementLocatorOpenApi'
            parsingHistory:
              type: array
              items:
                $ref: '#/components/schemas/ParserResultOpenApi'
            parentFolderId:
              type: integer
              format: int64


    ParserResultOpenApi:
      type: object
      required:
        - date
        - outputFileType
        - userParserSettingsId
        - linkToDownloadResults
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        linkToDownloadResults:
          type: string
        outputFileType:
          type: object
          $ref: "#/components/schemas/OutputFileTypeOpenApi"
        userParserSettingsId:
          type: integer
          format: int64

    ElementLocatorOpenApi:
      type: object
      required:
        - name
        - elementType
        - pathToLocator
        - userParserSettingsId
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        elementType:
          type: object
          $ref: "#/components/schemas/ElementTypeOpenApi"
        pathToLocator:
          type: string
        extraPointer:
          type: string
        userParserSettingsId:
          type: integer
          format: int64

    FolderOpenApi:
      allOf:
        - $ref: '#/components/schemas/FolderItemOpenApi'
        - type: object
          required:
            - userId
            - parentFolderId
            - folderItems
          properties:
            userId:
              type: integer
              format: int64
            parentFolderId:
              type: integer
              format: int64
            folderItems:
              type: array
              items:
                $ref: '#/components/schemas/FolderItemOpenApi'

    FolderItemOpenApi:
      type: object
      properties:
        name:
          type: string
        tags:
          type: array
          items:
            type: string

    OutputFileTypeOpenApi:
      type: string
      enum:
        - XLSX
        - CSV

    ElementTypeOpenApi:
      type: string
      enum:
        - XPATH
        - TAG_ATTR
        - CSS